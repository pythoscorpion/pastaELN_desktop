"use strict";

function orgToMd(orgString) {
  /** Simple translation of org-mode to md files
   * - only converts the structure *** -> ' -'
   * - if it does not start with some form of '* ', no translation and return original string
   */
  if (!orgString) return '';
  var prefix0 = orgString.match(/^[\*]* /); // eslint-disable-line no-useless-escape

  if (prefix0) {
    //ORG-MODE
    prefix0 = prefix0[0].length - 2;
    const re = new RegExp('^[\*]{' + prefix0.toString() + '}'); // eslint-disable-line no-useless-escape

    var mdString = orgString.split(/\r\n|\r|\n/);
    var prefix = 0; //prefix that evolves across all lines

    var prevLineHasStar = true;

    for (var i = 0; i < mdString.length; i++) {
      //for-loop cannot be map because consecutive lines depend on each other
      var newLine = re[Symbol.replace](mdString[i], '').trim();
      var prefix1 = newLine.match(/^[\*]* /); // eslint-disable-line no-useless-escape

      if (prefix1) {
        prefix = prefix1[0].length - 2; //count of * at the beginning

        newLine = '  '.repeat(prefix) + '- ' + newLine.substring(prefix + 2);
        prevLineHasStar = true;
      } else {
        if (i > 0 && prevLineHasStar) {
          prefix++;
          prevLineHasStar = false;
        }

        newLine = '  '.repeat(prefix) + newLine;
      }

      mdString[i] = newLine;
    }

    return mdString.join('  \n');
  }

  if (orgString.indexOf('#') == -1 && orgString.indexOf('\n-') == -1 && orgString.indexOf('\n') > 0) {
    //PLAIN TEXT FORMAT
    return orgString.replace(/\n/g, '  \n');
  } else {
    //MARKDOWN, NO-FORMAT
    return orgString;
  }
}

exports.orgToMd = orgToMd;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlcmVyL21pc2NUb29scy5qcyJdLCJuYW1lcyI6WyJvcmdUb01kIiwib3JnU3RyaW5nIiwicHJlZml4MCIsIm1hdGNoIiwibGVuZ3RoIiwicmUiLCJSZWdFeHAiLCJ0b1N0cmluZyIsIm1kU3RyaW5nIiwic3BsaXQiLCJwcmVmaXgiLCJwcmV2TGluZUhhc1N0YXIiLCJpIiwibmV3TGluZSIsIlN5bWJvbCIsInJlcGxhY2UiLCJ0cmltIiwicHJlZml4MSIsInJlcGVhdCIsInN1YnN0cmluZyIsImpvaW4iLCJpbmRleE9mIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSxPQUFULENBQWlCQyxTQUFqQixFQUEyQjtBQUN6QjtBQUNGO0FBQ0E7QUFDQTtBQUNFLE1BQUksQ0FBQ0EsU0FBTCxFQUNFLE9BQU8sRUFBUDtBQUNGLE1BQUlDLE9BQU8sR0FBR0QsU0FBUyxDQUFDRSxLQUFWLENBQWdCLFNBQWhCLENBQWQsQ0FQeUIsQ0FPNkM7O0FBQ3RFLE1BQUlELE9BQUosRUFBYTtBQUNYO0FBQ0FBLElBQUFBLE9BQU8sR0FBT0EsT0FBTyxDQUFDLENBQUQsQ0FBUCxDQUFXRSxNQUFYLEdBQWtCLENBQWhDO0FBQ0EsVUFBTUMsRUFBRSxHQUFHLElBQUlDLE1BQUosQ0FBVyxXQUFTSixPQUFPLENBQUNLLFFBQVIsRUFBVCxHQUE0QixHQUF2QyxDQUFYLENBSFcsQ0FHeUQ7O0FBQ3BFLFFBQUlDLFFBQVEsR0FBR1AsU0FBUyxDQUFDUSxLQUFWLENBQWdCLFlBQWhCLENBQWY7QUFDQSxRQUFJQyxNQUFNLEdBQUksQ0FBZCxDQUxXLENBS2lCOztBQUM1QixRQUFJQyxlQUFlLEdBQUcsSUFBdEI7O0FBQ0EsU0FBSyxJQUFJQyxDQUFDLEdBQUMsQ0FBWCxFQUFjQSxDQUFDLEdBQUNKLFFBQVEsQ0FBQ0osTUFBekIsRUFBaUNRLENBQUMsRUFBbEMsRUFBc0M7QUFBSTtBQUN4QyxVQUFJQyxPQUFPLEdBQUdSLEVBQUUsQ0FBQ1MsTUFBTSxDQUFDQyxPQUFSLENBQUYsQ0FBbUJQLFFBQVEsQ0FBQ0ksQ0FBRCxDQUEzQixFQUErQixFQUEvQixFQUFtQ0ksSUFBbkMsRUFBZDtBQUNBLFVBQUlDLE9BQU8sR0FBSUosT0FBTyxDQUFDVixLQUFSLENBQWMsU0FBZCxDQUFmLENBRm9DLENBRThCOztBQUNsRSxVQUFJYyxPQUFKLEVBQWE7QUFDWFAsUUFBQUEsTUFBTSxHQUFJTyxPQUFPLENBQUMsQ0FBRCxDQUFQLENBQVdiLE1BQVgsR0FBa0IsQ0FBNUIsQ0FEVyxDQUNxQjs7QUFDaENTLFFBQUFBLE9BQU8sR0FBRyxLQUFLSyxNQUFMLENBQVlSLE1BQVosSUFBb0IsSUFBcEIsR0FBeUJHLE9BQU8sQ0FBQ00sU0FBUixDQUFrQlQsTUFBTSxHQUFDLENBQXpCLENBQW5DO0FBQ0FDLFFBQUFBLGVBQWUsR0FBRyxJQUFsQjtBQUNELE9BSkQsTUFJTztBQUNMLFlBQUlDLENBQUMsR0FBQyxDQUFGLElBQU9ELGVBQVgsRUFBNEI7QUFDMUJELFVBQUFBLE1BQU07QUFDTkMsVUFBQUEsZUFBZSxHQUFHLEtBQWxCO0FBQ0Q7O0FBQ0RFLFFBQUFBLE9BQU8sR0FBRyxLQUFLSyxNQUFMLENBQVlSLE1BQVosSUFBb0JHLE9BQTlCO0FBQ0Q7O0FBQ0RMLE1BQUFBLFFBQVEsQ0FBQ0ksQ0FBRCxDQUFSLEdBQWNDLE9BQWQ7QUFDRDs7QUFDRCxXQUFPTCxRQUFRLENBQUNZLElBQVQsQ0FBYyxNQUFkLENBQVA7QUFDRDs7QUFBQyxNQUFJbkIsU0FBUyxDQUFDb0IsT0FBVixDQUFrQixHQUFsQixLQUF3QixDQUFDLENBQXpCLElBQThCcEIsU0FBUyxDQUFDb0IsT0FBVixDQUFrQixLQUFsQixLQUEwQixDQUFDLENBQXpELElBQThEcEIsU0FBUyxDQUFDb0IsT0FBVixDQUFrQixJQUFsQixJQUF3QixDQUExRixFQUE0RjtBQUM1RjtBQUNBLFdBQU9wQixTQUFTLENBQUNjLE9BQVYsQ0FBa0IsS0FBbEIsRUFBd0IsTUFBeEIsQ0FBUDtBQUNELEdBSEMsTUFHSztBQUNMO0FBQ0EsV0FBT2QsU0FBUDtBQUNEO0FBQ0Y7O0FBRURxQixPQUFPLENBQUN0QixPQUFSLEdBQWtCQSxPQUFsQiIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG9yZ1RvTWQob3JnU3RyaW5nKXtcbiAgLyoqIFNpbXBsZSB0cmFuc2xhdGlvbiBvZiBvcmctbW9kZSB0byBtZCBmaWxlc1xuICAgKiAtIG9ubHkgY29udmVydHMgdGhlIHN0cnVjdHVyZSAqKiogLT4gJyAtJ1xuICAgKiAtIGlmIGl0IGRvZXMgbm90IHN0YXJ0IHdpdGggc29tZSBmb3JtIG9mICcqICcsIG5vIHRyYW5zbGF0aW9uIGFuZCByZXR1cm4gb3JpZ2luYWwgc3RyaW5nXG4gICAqL1xuICBpZiAoIW9yZ1N0cmluZylcbiAgICByZXR1cm4gJyc7XG4gIHZhciBwcmVmaXgwID0gb3JnU3RyaW5nLm1hdGNoKC9eW1xcKl0qIC8pOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11c2VsZXNzLWVzY2FwZVxuICBpZiAocHJlZml4MCkge1xuICAgIC8vT1JHLU1PREVcbiAgICBwcmVmaXgwICAgICA9IHByZWZpeDBbMF0ubGVuZ3RoLTI7XG4gICAgY29uc3QgcmUgPSBuZXcgUmVnRXhwKCdeW1xcKl17JytwcmVmaXgwLnRvU3RyaW5nKCkrJ30nKTsgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11c2VsZXNzLWVzY2FwZVxuICAgIHZhciBtZFN0cmluZyA9IG9yZ1N0cmluZy5zcGxpdCgvXFxyXFxufFxccnxcXG4vKTtcbiAgICB2YXIgcHJlZml4ICA9IDA7ICAgICAgICAgICAgLy9wcmVmaXggdGhhdCBldm9sdmVzIGFjcm9zcyBhbGwgbGluZXNcbiAgICB2YXIgcHJldkxpbmVIYXNTdGFyID0gdHJ1ZTtcbiAgICBmb3IgKHZhciBpPTA7IGk8bWRTdHJpbmcubGVuZ3RoOyBpKyspIHsgICAvL2Zvci1sb29wIGNhbm5vdCBiZSBtYXAgYmVjYXVzZSBjb25zZWN1dGl2ZSBsaW5lcyBkZXBlbmQgb24gZWFjaCBvdGhlclxuICAgICAgdmFyIG5ld0xpbmUgPSByZVtTeW1ib2wucmVwbGFjZV0obWRTdHJpbmdbaV0sJycpLnRyaW0oKTtcbiAgICAgIHZhciBwcmVmaXgxICA9IG5ld0xpbmUubWF0Y2goL15bXFwqXSogLyk7ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVzZWxlc3MtZXNjYXBlXG4gICAgICBpZiAocHJlZml4MSkge1xuICAgICAgICBwcmVmaXggID0gcHJlZml4MVswXS5sZW5ndGgtMjsgIC8vY291bnQgb2YgKiBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgIG5ld0xpbmUgPSAnICAnLnJlcGVhdChwcmVmaXgpKyctICcrbmV3TGluZS5zdWJzdHJpbmcocHJlZml4KzIpO1xuICAgICAgICBwcmV2TGluZUhhc1N0YXIgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGk+MCAmJiBwcmV2TGluZUhhc1N0YXIpIHtcbiAgICAgICAgICBwcmVmaXgrKztcbiAgICAgICAgICBwcmV2TGluZUhhc1N0YXIgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBuZXdMaW5lID0gJyAgJy5yZXBlYXQocHJlZml4KStuZXdMaW5lO1xuICAgICAgfVxuICAgICAgbWRTdHJpbmdbaV0gPSBuZXdMaW5lO1xuICAgIH1cbiAgICByZXR1cm4gbWRTdHJpbmcuam9pbignICBcXG4nKTtcbiAgfSBpZiAob3JnU3RyaW5nLmluZGV4T2YoJyMnKT09LTEgJiYgb3JnU3RyaW5nLmluZGV4T2YoJ1xcbi0nKT09LTEgJiYgb3JnU3RyaW5nLmluZGV4T2YoJ1xcbicpPjApe1xuICAgIC8vUExBSU4gVEVYVCBGT1JNQVRcbiAgICByZXR1cm4gb3JnU3RyaW5nLnJlcGxhY2UoL1xcbi9nLCcgIFxcbicpO1xuICB9IGVsc2Uge1xuICAgIC8vTUFSS0RPV04sIE5PLUZPUk1BVFxuICAgIHJldHVybiBvcmdTdHJpbmc7XG4gIH1cbn1cblxuZXhwb3J0cy5vcmdUb01kID0gb3JnVG9NZDtcbiJdLCJmaWxlIjoicmVuZGVyZXIvbWlzY1Rvb2xzLmpzIn0=
